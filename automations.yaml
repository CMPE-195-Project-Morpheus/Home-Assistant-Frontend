- id: '1744409555312'
  alias: Light_config_selector
  description: Populate config selector with three available config slots
  triggers:
  - event: start
    trigger: homeassistant
  actions:
  - target:
      entity_id: input_select.light_config_selector
    data:
      options: '{{ [''Config1'', ''Config2'', ''Config3''] }}

        '
    action: input_select.set_options
  mode: single
- id: '1744427052558'
  alias: multi_light_settings
  description: Save multi-light settings to storage
  triggers:
  - entity_id:
    - input_number.light_brightness
    - input_number.light_color_temp
    trigger: state
  conditions: []
  actions:
  - variables:
      selected_lights: '{{ states(''input_select.multi_light_selector'') | regex_findall(''[^\\[\\],
        ]+'') }}

        '
      settings: "{\n  \"brightness\": {{ states('input_number.light_brightness') |
        float }},\n  \"color_temp\": {{ states('input_number.light_color_temp') |
        int }}\n}\n"
      current_data: '{{ states(''input_text.light_settings_storage'') | default(''{}'')
        | from_json }}

        '
  - target:
      entity_id: input_text.light_settings_storage
    data:
      value: "{% for light in selected_lights if light != 'Select lights...' %}\n
        \ {% set _ = current_data.update({light: settings | from_json}) %}\n{% endfor
        %} {{ current_data | to_json }}\n"
    action: input_text.set_value
  mode: single
- id: '1744771336410'
  alias: Alarm Trigger
  description: ''
  triggers:
  - at: input_datetime.alarm_time
    trigger: time
  - id: Mon
    at: input_datetime.monday
    trigger: time
    enabled: false
  - id: Tue
    at: input_datetime.tuesday
    trigger: time
    enabled: false
  - id: Wed
    at: input_datetime.wednesday
    trigger: time
    enabled: false
  - id: Thu
    at: input_datetime.thursday
    trigger: time
    enabled: false
  - id: Fri
    at: input_datetime.friday
    trigger: time
    enabled: false
  - id: Sat
    at: input_datetime.saturday
    trigger: time
    enabled: false
  - id: Sun
    at: input_datetime.sunday
    trigger: time
    enabled: false
  conditions:
  - condition: state
    entity_id: input_boolean.alarm_status
    state: 'on'
  - condition: template
    value_template: '{{ now().strftime(''%a'') == trigger.id }}'
    enabled: false
  actions:
  - data:
      dismissable: true
      browser_id:
      - 802c7285aa35be891e35df0acf3b1208
      title: Alarm has triggered
      right_button: Snooze
      left_button: Stop
      right_button_action:
        action: call-service
        service: script.increment_minute
      timeout: 10000
      dismiss_action:
        action: fire-dom-event
        browser_id: 25fb6da7-ffb42068
        service: browser_mod.sequence
        service_data:
          sequence:
          - service: browser_mod.close_popup
            data:
              browser_id: 25fb6da7-ffb42068
          - service: media_player.media_stop
            target:
              entity_id: media_player.rpi_audio
    action: browser_mod.popup
  - data:
      media_content_id: http://localhost:8123/local/alarm_sound.mp3
      media_content_type: audio/mp3
    action: media_player.play_media
    target:
      device_id: 802c7285aa35be891e35df0acf3b1208
  mode: restart
- id: '1746672055810'
  alias: Set Alarm Time from Day
  description: ''
  triggers:
  - at: 00:00:01
    trigger: time
  conditions: []
  actions:
  - variables:
      day: '{{ now().strftime(''%A'') | lower }}'
  - data:
      entity_id: input_datetime.alarm_time
      time: "{% set source = {\n  'monday': states('input_datetime.monday'),\n  'tuesday':
        states('input_datetime.tuesday'),\n  'wednesday': states('input_datetime.wednesday'),\n
        \ 'thursday': states('input_datetime.thursday'),\n  'friday': states('input_datetime.friday'),\n
        \ 'saturday': states('input_datetime.saturday'),\n  'sunday': states('input_datetime.sunday')\n}
        %} {{ source[day] }}\n"
    action: input_datetime.set_datetime
  mode: single
