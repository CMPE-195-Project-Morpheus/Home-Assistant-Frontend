- id: '1744409555312'
  alias: Light_config_selector
  description: Populate config selector with three available config slots
  triggers:
  - event: start
    trigger: homeassistant
  actions:
  - target:
      entity_id: input_select.light_config_selector
    data:
      options: '{{ [''Config1'', ''Config2'', ''Config3''] }}

        '
    action: input_select.set_options
  mode: single
- id: '1744427052558'
  alias: multi_light_settings
  description: Save multi-light settings to storage
  triggers:
  - entity_id:
    - input_number.light_brightness
    - input_number.light_color_temp
    trigger: state
  conditions: []
  actions:
  - variables:
      selected_lights: '{{ states(''input_select.multi_light_selector'') | regex_findall(''[^\\[\\],
        ]+'') }}

        '
      settings: "{\n  \"brightness\": {{ states('input_number.light_brightness') |
        float }},\n  \"color_temp\": {{ states('input_number.light_color_temp') |
        int }}\n}\n"
      current_data: '{{ states(''input_text.light_settings_storage'') | default(''{}'')
        | from_json }}

        '
  - target:
      entity_id: input_text.light_settings_storage
    data:
      value: "{% for light in selected_lights if light != 'Select lights...' %}\n
        \ {% set _ = current_data.update({light: settings | from_json}) %}\n{% endfor
        %} {{ current_data | to_json }}\n"
    action: input_text.set_value
  mode: single
- id: '1744771336410'
  alias: Alarm Trigger
  description: ''
  triggers:
  - trigger: time
    at: input_datetime.alarm_time
  - trigger: time
    id: Mon
    at: input_datetime.monday
  - trigger: time
    id: Tue
    at: input_datetime.tuesday
  - trigger: time
    id: Wed
    at: input_datetime.wednesday
  - trigger: time
    id: Thu
    at: input_datetime.thursday
  - trigger: time
    id: Fri
    at: input_datetime.friday
  - trigger: time
    id: Sat
    at: input_datetime.saturday
  - trigger: time
    id: Sun
    at: input_datetime.sunday
  conditions:
  - condition: state
    entity_id: input_boolean.alarm_status
    state: 'on'
  - condition: template
    value_template: '{{ now().strftime(''%a'') == trigger.id  }}'
  actions:
  - action: script.play_alarm_sound
    metadata: {}
    data: {}
  mode: restart
